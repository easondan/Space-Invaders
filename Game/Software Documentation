Author:Eason,Brycen,Gordon
This Documentation is intended for the Developer and user 
Program/Application:Space Invaders

(If you are user refer to the tutorial)
Installation Guide:A zip file is compressed the user/developer will open
In This Case with the developer the developer wants to open the entire file in the IDE to Open
For the User's case They want to be opening and using the JAR FILE


Reference Manual:
imports Used:
import PlayerMovement.KeyboardControl;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.Timer;


Package:Game

- AlienBullets.java
  - This Class is specifically used for the creation of the enemy bullets which also is extended to the abstract class of a 
    game Moving Object
  - This Class Includes the following methods and constructor:
        - public AlienBullets(int xPosition, int yPosition, int diameter, Color color)
        -Public void draw(graphics g)
        - public Rectangle getBounds()

- Blocks.java
    - This Class is used for the creation of the blocks in the game in which bullets and beams are able to collide with them 
       which is also extended to GameObject 
     - This Class Includes the following methods and constructor and attributes :
            - int width
            - int height 
            -  public Blocks(int xPosition, int yPosition, int width, int height, Color color)(constructor)
            - public int getWidth()(gets the blocks' width)
            - public int getHeight()(gets the blocks' height)
            - public void setHeight(int height )(sets the blocks' height)
            - Public void setWidth(int width)(sets the block's width)
- Bullet.java
    This class is ued for the creation of the bullets for the players which is used to draw and gather attributes and set 
    a hitbox for the bullet This Class also extends with the parent of called GameMoving
     - This CLass Includes the following methods and constructor and attributes
            -int yVelcity
            - int size
            -  public Bullet(int xPos, int yPos, int yVel, Color color)  (Constructror)
            - public int getyVelocity() (Gets the velocity of the bullet)
            - public int getSize()      (Gets the size of the bullets)
            - public void setYvelocity(int yVelocity) (sets how fast the bullet is moving)
            public void setSize(int size)               (sets how big the bullet is)
 
- Draw.java
    - This Class is use to run the whole game which combines all the classes using variables,methods,array,timers to run this game
     - In order for the draw class to work the class must extend to a abstractclass for JPanel
        - Variables:
    //Variables cruical for the game to run
    private final int WIDTH = 1000;
    private final int HEIGHT = 800;
    private final int FPS = 200;
    public static int scoreCount;
    public static ActionListener e;
    KeyboardControl controller = new KeyboardControl();
    Timer gameTimer;
    public int lives = 3;
    public static int level = 1;
    //Use random to fire random alien beams
    Random r = new Random();
    MainMenu mr = new MainMenu();
    //initiaes variables which will be used as objects
    private Ship playerShip;
    private Enemy enemy;
    private Bullet bullet;
    private AlienBullets beam;
    private Blocks blocks;
    boolean hitMarker;
    int AlienSpeed;
    int highScore;
    private boolean newBulletCanFire = true;
    private boolean newBeamCanFire = true;
    private ArrayList<Enemy> enemyList = new ArrayList();
    private ArrayList<AlienBullets> beamList = new ArrayList();
    private ArrayList<Blocks> blockList = new ArrayList();
    public static File file;
    ImageIcon background = new ImageIcon("Images/SpaceBackground.png");

    Methods:
    - Public void paint(graphics g) (take those in the setupgame and draws them which shows up on screen)
    - public void setUpGame() (Initializes variables and constructors such as the enemyship,playship,blocks,bullets,beams)
    - public draw() (this method is used to set up the Jpanel such as the title,size and many more parts of the frame)
    - public void updateGameStatis(int FPS) (this will help the game run it considers 
            things such as bullet collusion,beam collision, alien shield collusion and it also resets the game when needed)
  
 -public void start() (this method is used to run the animation which allows things to move) 


- Enemy.java 
    - This Class is used to for the aliens/enemy in the games which is also use to create those enemy/aliens
        Attributes:None
        Constructor:None
        Methods:
        -   public void draw(Graphics g) (used to draw the aliens)
        -   public void move() moves the aliens 
        -   public Rectangle getBounds() this method is used to get the hitboxes of the enemy
        
- GameBoard.java
    This Class is mainly used to open the jFrame and run the game 

- GameMoving.java
   This is a abstract class that cover things in the game that are moving
   - Attributes:   int xVel,int yVel (vel represent velocity)
   - Constructors   public GameMoving(int xPosition, int yPosition, int xVelocity, int yVelocity, Color color)
   - Methods: - public int getxVel() (getter for x velocity)
              - public void setxVel(int xVel (setter  for x velocity)
              -  public int getyVel()(getter for y velocity)
              - public void setyVel(int yVel)  (setter for y velocity)
              -  public void move()  (method use to move objects in the game)
              -public String toString() (summerizers everything)
              
- GameObject.java
- MainMenu.java
    - Created using a Jframe this is three button that are clickable
    - play Button(Plays the game)
    - How to Play Button(Shows what the game is about and how to play it)
    - Exit(The Program ends)
    - HighScore(Shows the top 5 high scores)

- PlayerMoving.java
    - This class is used for moving the player's ship and is treated as a abstract class which also extends to gameobject class
        Attributes:None
        Constructors:  public PlayerMoving(int xPos, int yPos, Color color, KeyboardControl control)
        Methods: public void draw(Graphics g) (draws something)

    AbstractClass used for the player's ship and also extends from gameobject 
    Attributes:  KeyboardControl control
    Constructor:  public PlayerMoving(int xPos, int yPos, Color color, KeyboardControl control)
    Methods  public void draw(Graphics g) Draws the ship 

- Score.java
   - This class is used along with the main menu to show the high score 
    - Attributes: String name, int score
    - Constructors: - public Score()
                    -  public Score(String name,int score)
     - Methods: Getter and setter for: name and score
                 public String toString() (lists  the score and the person's name)

- Ship.java
   - This Class is used to draw the player's ships as well a some included features but were now drawn as well extends from the abstract class playerMoving
   - This Class will draw the ships/add the icon to the ship 
   Attributes:None
   Constructor: public Ship(int xPos, int yPos, Color color, KeyboardControl control)
   Methods: -public void draw(Graphics g)   (draws the player ship)
            - public Rectangle getBounds() (gets the hit box of the playerShip)
            - Public void move() (with keyboard input added later on this will move the player ship and set boundary so the ship stops on screen)

Package PlayerMovement
- KeyBoardControl.java
    This Class is used for the keyboard controls used to control the ship 
    Attributes:   private boolean[] keyStatus
    Constructor:  public KeyboardControl() sets the keystatus 
    Methods:    -  public boolean getKeyStatus(int keyCode) (gets the ascii number for keycode as long as it's in the ascii range)
                -  public void resetController() (if controller was not functional use this to reset)
                -  public void keyTyped(KeyEvent ke) (Method was never used but is appart of the imports)
                -  public void keyPressed(KeyEvent ke) (Checks if the key is pressed)
                -  public void keyReleased(KeyEvent ke) (check if the key is release)
             
        

Bugs and Solution
Problem 1 :Alien Bullets will not fire properly bullets will move and then freeze
Solution 1 :Check the java class for any bugs which showed of the method which didn't have a move option
Problem 2:Key Are Not responsive or some key will work but other will not
Solution2: Assign working keys to the program as some key will not work
Problem 3:When JFrame appeared there was no game and has a small size screen
Solution 3: Look through the java main class game frame and a size was not set 
Problem 4: MainMenu could not accept button ontop of a label  
Solution 4:Set the layout of the Jpanel to null
Problem 5:Making the game harder for the user
Solution 6: Use a level variable and use increments to make the game more difficult
Problem 7:Bullets cannot fire after been shot once
Solution 7 Use a boolean to determine when player bullets can be fired 
Problem 8:Alien Bullets cannot be fire after being shot once
Solution 8:Use a boolean to determine when player bullets can be fired 
Problem 9: File will not write to the correct file
Solution 9: Check the file pathway and see if it's written correctly  




Tutorial:   
For the user the play they can refer to this or refer to the how to play button in the main menu

Main Menu: There will be four button with one being a play button to play the game, A how to play button(refer to tutorial)
           Credits Button, and a high score button

The Purpose of Space Invaders:
You Are a spaceship who has a job to destroy the aliens the goal of this game is to make a faster and more harder version of space invaders

The Following Things Have Been Changed in the game:
    -Faster Gameplay
    - Shield now can cover you and play bullets does not affect shield
    - Aliens move faster and fire faster as each level progresses
    - Score has a multplyer depending on the level 

Controls:
- To Play Use the Left and right Arrow Keys to Move 
- Press or hold the spacebar to fire 

Goals:
- Destroy all the aliens to move on to the next level if aliens fall below a certain point the level will reset 
- Game will end once you lost all of your lives 

Good Luck

To Get a printed version of this Copy and paste this link:
https://docs.google.com/document/d/1f8BUtBWxKcEKY__qyimJ7m3SM58oDV2su0eztMy2evA/edit?usp=sharing